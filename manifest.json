{"cyber-dojo.sh":"rm -f *.class\nCLASSES=.:`ls /junit/*.jar | tr '\\n' ':'`\njavac -Xlint:unchecked -Xlint:deprecation -cp $CLASSES  *.java\nif [ $? -eq 0 ]; then\n  # run test classes even if they are inner classes\n  # remove voluminous stack trace from output\n  java -cp $CLASSES org.junit.runner.JUnitCore `ls -1 *Test*.class | grep -v '\\\\$' | sed 's/\\(.*\\)\\..*/\\1/'` | grep -Ev 'org.junit.runner|org.junit.internal|sun.reflect|org.junit.Assert|java.lang.reflect|org.hamcrest'\nfi\n","output":"Codeine.java:4: error: constructor Medicine in class Medicine cannot be applied to given types;\n    public Codeine(List<Prescription> prescriptions) {\n                                                     ^\n  required: String,List<Prescription>\n  found: no arguments\n  reason: actual and formal argument lists differ in length\nPatientTest.java:15: error: cannot find symbol\n        assertEquals(0, patient.clash(Arrays.asList(codeine, prozac), 90));\n                                                             ^\n  symbol:   variable prozac\n  location: class PatientTest\n2 errors\n","instructions":"\nThis is an instructor-led exercise with no written instructions.\nYour instructor will explain the exercise.\n","PatientTest.java":"import org.junit.*;\nimport static org.junit.Assert.*;\nimport java.time.LocalDate;\nimport java.util.Arrays;\n\npublic class PatientTest {\n\n    @Test\n    public void no_clash_when_not_taking_both_medicines() {\n        LocalDate dispenseDate = LocalDate.now().minusDays(30);\n        Prescription prescription = new Prescription(dispenseDate, 30);\n        Medicine codeine = new Medicine(\"Codeine\", \n            Arrays.asList(prescription));\n        Patient patient = new Patient(Arrays.asList(codeine));\n        assertEquals(0, patient.clash(Arrays.asList(codeine, prozac), 90));\n    }\n\n    // TODO: no_clash_when_not_taking_both_medicines\n    // TODO: no_clash_when_no_overlap\n    // TODO: clash_when_medicines_taken_overlapping\n    // TODO: clash_when_medicines_taken_overlapping_start_of_period\n    // TODO: clash_when_medicines_taken_overlapping_current_date\n    // TODO: clash_when_medicines_taken_continuously_with_the_same_period\n    // TODO: clash_when_medicines_taken_continuously_with_partial_overlap\n}\n","Patient.java":"import java.util.List;\n\npublic class Patient {\n    public Patient(List<Medicine> medicines) {\n    }\n}\n","Medicine.java":"import java.util.List;\n\npublic class Medicine {\n    public Medicine(String name, List<Prescription> prescriptions) {\n    }\n}","Codeine.java":"import java.util.List;\n\npublic class Codeine extends Medicine {\n    public Codeine(List<Prescription> prescriptions) {\n    }\n}","Prescription.java":"import java.time.LocalDate;\n\npublic class Prescription {\n    public Prescription(LocalDate dispenseDate, int daysSupply) {\n    }\n}"}